import type { NextApiRequest, NextApiResponse } from 'next';

// to do - validation function between client and backend of prices/products
import Stripe from 'stripe';

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY!, {
  apiVersion: '2022-11-15', // https://github.com/stripe/stripe-node
});

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse
) {
  if (req.method === 'POST') {
    const cart = req.body;

    const params: Stripe.Checkout.SessionCreateParams = {
      submit_type: 'pay',
      payment_method_types: ['card'],
      billing_address_collection: 'auto',
      shipping_address_collection: {
        allowed_countries: ['NZ'],
      },
      line_items: cart,
      success_url: `${req.headers.origin}/checkout/success/{CHECKOUT_SESSION_ID}`,
      cancel_url: `${req.headers.origin}/checkout/revieworder`,
      mode: 'payment',
    };

    const checkoutSession: Stripe.Checkout.Session =
      await stripe.checkout.sessions.create(params);

    res.status(200).json(checkoutSession);
  } else {
    res.setHeader('Allow', 'POST');
    res.status(405).end('Only POST allowed');
  }
}
